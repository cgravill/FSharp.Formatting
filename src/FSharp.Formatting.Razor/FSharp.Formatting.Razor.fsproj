<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <None Include="paket.references" />
    <Compile Include="../Common/AssemblyInfo.fs">
      <Link>Common/AssemblyInfo.fs</Link>
    </Compile>
    <Compile Include="../Common/Collections.fs">
      <Link>Common/Collections.fs</Link>
    </Compile>
    <Compile Include="../Common/StringParsing.fs">
      <Link>Common/StringParsing.fs</Link>
    </Compile>
    <Compile Include="RazorImpl.fs" />
    <Compile Include="RazorFormatting.fs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\FSharp.Formatting.Literate\FSharp.Formatting.Literate.fsproj" />
    <ProjectReference Include="..\FSharp.Formatting.ApiDocs\FSharp.Formatting.ApiDocs.fsproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <!-- ugly hack: inline p2p libraries in NuGet package
         workaround for https://github.com/NuGet/Home/issues/3891 -->
    <Content Include="bin\$(Configuration)\$(TargetFramework)\FSharp.Formatting.ApiDocs.*" PackagePath="lib/$(TargetFramework)" />
  </ItemGroup>

  <!-- Since Paket.Restore.targets isn't capable of expressing this,
        override AspNetCore packages to properly constrain the generated nuget package -->
  <ItemGroup>
    <PackageReference Include="RazorEngine.NetCore" Version="[2.2.6, 3.0)" />
    <PackageReference Include="Microsoft.AspNetCore.Razor" Version="[2.2, 3.0)" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Runtime" Version="[2.2, 3.0)" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Language" Version="[2.2, 3.0)" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="[3.6, 4.0)" />
  </ItemGroup>
  
  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>